{"version":3,"file":"js/about.a78e6185.js","mappings":"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","sources":["webpack://vue-test01/./node_modules/color-name/index.js","webpack://vue-test01/./src/views/AboutView.vue","webpack://vue-test01/./src/views/AboutView.vue?d56f","webpack://vue-test01/./src/views/FirstView.vue?2dfb","webpack://vue-test01/./src/views/FirstView.vue","webpack://vue-test01/./src/views/FirstView.vue?62cd","webpack://vue-test01/./src/views/OpenlayerView.vue?5595","webpack://vue-test01/./src/views/OpenlayerView.vue","webpack://vue-test01/./src/components/Map.vue?d3a0","webpack://vue-test01/./src/components/Map.vue","webpack://vue-test01/./node_modules/ol/events/Event.js","webpack://vue-test01/./node_modules/ol/ObjectEventType.js","webpack://vue-test01/./node_modules/ol/Disposable.js","webpack://vue-test01/./node_modules/ol/array.js","webpack://vue-test01/./node_modules/ol/functions.js","webpack://vue-test01/./node_modules/ol/obj.js","webpack://vue-test01/./node_modules/ol/events/Target.js","webpack://vue-test01/./node_modules/ol/events/EventType.js","webpack://vue-test01/./node_modules/ol/events.js","webpack://vue-test01/./node_modules/ol/Observable.js","webpack://vue-test01/./node_modules/ol/util.js","webpack://vue-test01/./node_modules/ol/Object.js","webpack://vue-test01/./node_modules/ol/CollectionEventType.js","webpack://vue-test01/./node_modules/ol/Collection.js","webpack://vue-test01/./node_modules/ol/has.js","webpack://vue-test01/./node_modules/ol/asserts.js","webpack://vue-test01/./node_modules/ol/transform.js","webpack://vue-test01/./node_modules/ol/extent/Relationship.js","webpack://vue-test01/./node_modules/ol/extent.js","webpack://vue-test01/./node_modules/color-space/rgb.js","webpack://vue-test01/./node_modules/color-space/xyz.js","webpack://vue-test01/./node_modules/color-space/luv.js","webpack://vue-test01/./node_modules/color-space/lchuv.js","webpack://vue-test01/./node_modules/color-parse/index.js","webpack://vue-test01/./node_modules/color-space/hsl.js","webpack://vue-test01/./node_modules/color-rgba/index.js","webpack://vue-test01/./node_modules/ol/math.js","webpack://vue-test01/./node_modules/ol/color.js","webpack://vue-test01/./node_modules/ol/style/IconImageCache.js","webpack://vue-test01/./node_modules/ol/layer/Property.js","webpack://vue-test01/./node_modules/ol/layer/Base.js","webpack://vue-test01/./node_modules/ol/render/EventType.js","webpack://vue-test01/./node_modules/ol/ViewHint.js","webpack://vue-test01/./node_modules/ol/ViewProperty.js","webpack://vue-test01/./node_modules/ol/tilegrid/common.js","webpack://vue-test01/./node_modules/ol/proj/Units.js","webpack://vue-test01/./node_modules/ol/proj/Projection.js","webpack://vue-test01/./node_modules/ol/proj/epsg3857.js","webpack://vue-test01/./node_modules/ol/proj/epsg4326.js","webpack://vue-test01/./node_modules/ol/proj/projections.js","webpack://vue-test01/./node_modules/ol/proj/transforms.js","webpack://vue-test01/./node_modules/ol/coordinate.js","webpack://vue-test01/./node_modules/ol/sphere.js","webpack://vue-test01/./node_modules/ol/console.js","webpack://vue-test01/./node_modules/ol/proj.js","webpack://vue-test01/./node_modules/ol/centerconstraint.js","webpack://vue-test01/./node_modules/ol/resolutionconstraint.js","webpack://vue-test01/./node_modules/ol/rotationconstraint.js","webpack://vue-test01/./node_modules/ol/easing.js","webpack://vue-test01/./node_modules/ol/geom/flat/transform.js","webpack://vue-test01/./node_modules/ol/geom/Geometry.js","webpack://vue-test01/./node_modules/ol/geom/SimpleGeometry.js","webpack://vue-test01/./node_modules/ol/geom/flat/closest.js","webpack://vue-test01/./node_modules/ol/geom/flat/deflate.js","webpack://vue-test01/./node_modules/ol/geom/flat/simplify.js","webpack://vue-test01/./node_modules/ol/geom/flat/inflate.js","webpack://vue-test01/./node_modules/ol/geom/flat/area.js","webpack://vue-test01/./node_modules/ol/geom/LinearRing.js","webpack://vue-test01/./node_modules/ol/geom/Point.js","webpack://vue-test01/./node_modules/ol/geom/flat/contains.js","webpack://vue-test01/./node_modules/ol/geom/flat/interiorpoint.js","webpack://vue-test01/./node_modules/ol/geom/flat/segments.js","webpack://vue-test01/./node_modules/ol/geom/flat/intersectsextent.js","webpack://vue-test01/./node_modules/ol/geom/flat/reverse.js","webpack://vue-test01/./node_modules/ol/geom/flat/orient.js","webpack://vue-test01/./node_modules/ol/geom/Polygon.js","webpack://vue-test01/./node_modules/ol/View.js","webpack://vue-test01/./node_modules/ol/layer/Layer.js","webpack://vue-test01/./node_modules/ol/renderer/Map.js","webpack://vue-test01/./node_modules/ol/render/Event.js","webpack://vue-test01/./node_modules/ol/css.js","webpack://vue-test01/./node_modules/ol/dom.js","webpack://vue-test01/./node_modules/ol/render/canvas.js","webpack://vue-test01/./node_modules/ol/renderer/Composite.js","webpack://vue-test01/./node_modules/ol/layer/Group.js","webpack://vue-test01/./node_modules/ol/MapEvent.js","webpack://vue-test01/./node_modules/ol/MapBrowserEvent.js","webpack://vue-test01/./node_modules/ol/MapBrowserEventType.js","webpack://vue-test01/./node_modules/ol/pointer/EventType.js","webpack://vue-test01/./node_modules/ol/MapBrowserEventHandler.js","webpack://vue-test01/./node_modules/ol/MapEventType.js","webpack://vue-test01/./node_modules/ol/MapProperty.js","webpack://vue-test01/./node_modules/ol/structs/PriorityQueue.js","webpack://vue-test01/./node_modules/ol/TileState.js","webpack://vue-test01/./node_modules/ol/TileQueue.js","webpack://vue-test01/./node_modules/ol/control/Control.js","webpack://vue-test01/./node_modules/ol/control/Attribution.js","webpack://vue-test01/./node_modules/ol/control/Rotate.js","webpack://vue-test01/./node_modules/ol/control/Zoom.js","webpack://vue-test01/./node_modules/ol/control/defaults.js","webpack://vue-test01/./node_modules/ol/interaction/Property.js","webpack://vue-test01/./node_modules/ol/interaction/Interaction.js","webpack://vue-test01/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://vue-test01/./node_modules/ol/interaction/Pointer.js","webpack://vue-test01/./node_modules/ol/events/condition.js","webpack://vue-test01/./node_modules/ol/interaction/DragPan.js","webpack://vue-test01/./node_modules/ol/interaction/DragRotate.js","webpack://vue-test01/./node_modules/ol/render/Box.js","webpack://vue-test01/./node_modules/ol/interaction/DragBox.js","webpack://vue-test01/./node_modules/ol/interaction/DragZoom.js","webpack://vue-test01/./node_modules/ol/events/Key.js","webpack://vue-test01/./node_modules/ol/interaction/KeyboardPan.js","webpack://vue-test01/./node_modules/ol/interaction/KeyboardZoom.js","webpack://vue-test01/./node_modules/ol/Kinetic.js","webpack://vue-test01/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://vue-test01/./node_modules/ol/interaction/PinchRotate.js","webpack://vue-test01/./node_modules/ol/interaction/PinchZoom.js","webpack://vue-test01/./node_modules/ol/interaction/defaults.js","webpack://vue-test01/./node_modules/ol/size.js","webpack://vue-test01/./node_modules/ol/Map.js","webpack://vue-test01/./node_modules/ol/layer/TileProperty.js","webpack://vue-test01/./node_modules/ol/layer/BaseTile.js","webpack://vue-test01/./node_modules/ol/ImageState.js","webpack://vue-test01/./node_modules/ol/renderer/Layer.js","webpack://vue-test01/./node_modules/ol/renderer/canvas/Layer.js","webpack://vue-test01/./node_modules/ol/Tile.js","webpack://vue-test01/./node_modules/ol/Image.js","webpack://vue-test01/./node_modules/ol/ImageTile.js","webpack://vue-test01/./node_modules/ol/reproj/common.js","webpack://vue-test01/./node_modules/ol/reproj/Triangulation.js","webpack://vue-test01/./node_modules/ol/reproj.js","webpack://vue-test01/./node_modules/ol/reproj/Tile.js","webpack://vue-test01/./node_modules/ol/TileRange.js","webpack://vue-test01/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://vue-test01/./node_modules/ol/layer/Tile.js","webpack://vue-test01/./node_modules/ol/structs/LRUCache.js","webpack://vue-test01/./node_modules/ol/tilecoord.js","webpack://vue-test01/./node_modules/ol/TileCache.js","webpack://vue-test01/./node_modules/ol/source/TileEventType.js","webpack://vue-test01/./node_modules/ol/source/Source.js","webpack://vue-test01/./node_modules/ol/tilegrid/TileGrid.js","webpack://vue-test01/./node_modules/ol/tilegrid.js","webpack://vue-test01/./node_modules/ol/source/Tile.js","webpack://vue-test01/./node_modules/ol/tileurlfunction.js","webpack://vue-test01/./node_modules/ol/source/UrlTile.js","webpack://vue-test01/./node_modules/ol/source/TileImage.js","webpack://vue-test01/./node_modules/ol/source/XYZ.js","webpack://vue-test01/./node_modules/ol/source/OSM.js","webpack://vue-test01/./src/components/Map.vue?8a65","webpack://vue-test01/./src/views/OpenlayerView.vue?4efe"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n  </div>\n</template>\n","import { render } from \"./AboutView.vue?vue&type=template&id=48dedea6\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\nimport _imports_0 from '../assets/logo.png'\n\n\nconst _hoisted_1 = { class: \"about\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"\\\"hey\\\"\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _createVNode(_component_HelloWorld, { msg: \"Welcome to Your Vue.js + TypeScript App\" })\n  ]))\n}","<template>\n  <div class=\"about\">\n    <h1>\"hey\"</h1>\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\" />\n    <HelloWorld msg=\"Welcome to Your Vue.js + TypeScript App\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport HelloWorld from \"@/components/HelloWorld.vue\"; // @ is an alias to /src\n@Options({\n  components: {\n    HelloWorld,\n  },\n})\nexport default class HomeView extends Vue {}\n</script>\n","import { render } from \"./FirstView.vue?vue&type=template&id=7c56f654&ts=true\"\nimport script from \"./FirstView.vue?vue&type=script&lang=ts\"\nexport * from \"./FirstView.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-220c8000\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Openlayer App\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Map = _resolveComponent(\"Map\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createVNode(_component_Map)\n  ]))\n}","<template>\n  <div>\n    <h1>Openlayer App</h1>\n    <Map />\n    <!-- Map.vue 컴포넌트를 사용합니다. -->\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport Map from \"@/components/Map.vue\"; // Map.vue 컴포넌트를 import합니다.\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    Map, // 컴포넌트를 등록합니다.\n  },\n});\n</script>\n\n<style scoped>\n/* 스타일링 */\n</style>\n","import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2b316fc9\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  ref: \"map\",\n  class: \"map\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512))\n}","<template>\n  <div ref=\"map\" class=\"map\"></div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted } from \"vue\"; // Vue 3에서는 Vue를 import하지 않고 defineComponent와 onMounted를 가져옵니다.\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\n\nexport default defineComponent({\n  name: \"MapComponent\",\n  setup() {\n    onMounted(() => {\n      // 지도 컨테이너 선택\n      const mapContainer = document.querySelector(\".map\") as HTMLElement;\n\n      // 지도 레이어 생성\n      const mapLayer = new TileLayer({\n        source: new OSM(),\n      });\n\n      // 지도 뷰 생성\n      const mapView = new View({\n        center: [0, 0],\n        zoom: 2,\n      });\n\n      // 지도 생성\n      const map = new Map({\n        target: mapContainer,\n        layers: [mapLayer],\n        view: mapView,\n      });\n    });\n  },\n});\n</script>\n\n<style scoped>\n.map {\n  width: 100%;\n  height: 400px;\n}\n</style>\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.2.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      }\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    const canvasWidthInUnits = getWidth(sourceDataExtent);\n    const canvasHeightInUnits = getHeight(sourceDataExtent);\n    stitchContext = createCanvasContext2D(\n      Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n      Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n      canvasPool\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n\n    const stitchScale = pixelRatio / sourceResolution;\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = src.extent[0] - sourceDataExtent[0];\n      const yPos = -(src.extent[3] - sourceDataExtent[3]);\n      const srcWidth = getWidth(src.extent);\n      const srcHeight = getHeight(src.extent);\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          xPos * stitchScale,\n          yPos * stitchScale,\n          srcWidth * stitchScale,\n          srcHeight * stitchScale\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(\n        sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio\n      );\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent'\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","import { render } from \"./Map.vue?vue&type=template&id=2b316fc9&scoped=true&ts=true\"\nimport script from \"./Map.vue?vue&type=script&lang=ts\"\nexport * from \"./Map.vue?vue&type=script&lang=ts\"\n\nimport \"./Map.vue?vue&type=style&index=0&id=2b316fc9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2b316fc9\"]])\n\nexport default __exports__","import { render } from \"./OpenlayerView.vue?vue&type=template&id=220c8000&scoped=true&ts=true\"\nimport script from \"./OpenlayerView.vue?vue&type=script&lang=ts\"\nexport * from \"./OpenlayerView.vue?vue&type=script&lang=ts\"\n\nimport \"./OpenlayerView.vue?vue&type=style&index=0&id=220c8000&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-220c8000\"]])\n\nexport default __exports__"],"names":["module","exports","class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","alt","src","_imports_0","_ctx","_cache","$props","$setup","$data","$options","_component_HelloWorld","_resolveComponent","_openBlock","_createVNode","msg","HomeView","Vue","__decorate","Options","components","HelloWorld","_withScopeId","n","_pushScopeId","_popScopeId","_component_Map","ref","BaseEvent","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","direction","length","i","candidate","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","apply","clear","object","property","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ADD","REMOVE","Property","LENGTH","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","except","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","test","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","assertion","errorMessage","create","transform","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","det","determinant","c","d","e","mat","transformStringDiv","transformString","join","node","document","createElement","style","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","min","minY","maxX","max","maxY","createOrUpdate","clone","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","l","name","channel","alias","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","r","g","z","pow","xyz","arg","o","_u","_v","u","v","xn","yn","zn","vn","k","luv","yr","lchuv","sqrt","hr","atan2","h","PI","baseHues","red","orange","yellow","green","blue","purple","parse","cstr","m","space","parts","alpha","base","isShort","parseInt","exec","replace","dims","trim","split","shift","map","parseFloat","endsWith","match","hsl","t1","t2","t3","s","rgba","color","raw","Number","parsed","squaredSegmentDistance","t","solveLinearSystem","maxRow","maxEl","abs","absValue","tmp","j","coef","angleInDegrees","lerp","decimals","factor","round","floor","ceil","asString","delta","MAX_CACHE_SIZE","cache","cacheSize","fromString","isNaN","normalize","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getKey","setSize","maxCacheSize","colorString","shared","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","BaseLayer","background_","background","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","METERS_PER_UNIT","Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","add","projection","transforms","destination","sourceCode","destinationCode","coordinate1","coordinate2","cosAngle","sinAngle","scale","worldWidth","worldsAway","sourceExtentWidth","projectionExtent","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProjections","projections","projectionLike","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","rotate","simplify","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","squaredDistance","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","ret","intersectsLineString","coordinatesExtent","point1","point2","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverse","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","multiWorld","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","degrees","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","Layer","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","layerState","getView","layerStatesArray","getLayerGroup","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","hasFeature","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","context","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","createCanvasContext2D","canvasPool","settings","canvas","getContext","releaseCanvas","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","checkedFonts","measureFont","measureContext","textHeights","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","measureElement","measureText","CompositeMapRenderer","Map","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","declutterLayers_","display","declutterLayers","previousElement","layerIndex","sourceState","layers","renderDeclutter","GroupEvent","LAYERS","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","IDLE","LOADING","LOADED","EMPTY","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","ACTIVE","Interaction","setActive","getActive","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","begin","distance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","getSize","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","hasArea","toSize","removeLayerMapProperty","setLayerMapProperty","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","Composite","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","moveStart","idle","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","image","ImageState","renderIfReadyAndVisible","loadImage","imageState","pixelContext","createPixelContext","willReadFrequently","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","row","drawImage","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageTile","tileLoadFunction","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","handleImageError_","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","ctx","fillStyle","fillRect","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isFinite","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","closePath","restore","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","drawSingle","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","canvasWidthInUnits","canvasHeightInUnits","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","getWidth","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","tileSource","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","globalAlpha","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer","BaseTile","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","refresh","setAttributions","attributionLike","tmpTileCoord","DECIMALS","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","url","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","defineComponent","setup","onMounted","mapContainer","querySelector","mapLayer","mapView"],"sourceRoot":""}